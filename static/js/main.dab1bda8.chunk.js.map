{"version":3,"sources":["logo.svg","set4/set4Images.js","set4/set4ProbabilityTable.js","set4/set4ExpTable.js","set4/set4Comps.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","set4Images","id","src","title","cost","amount","set4ProbTable","level","t1","t2","t3","t4","t5","set4ExpTable","exp","set4Comps","compName","compChamps","m_set4Images","emptyImg","m_set4Comps","money","benchSize","timeLimit","m_set4ChampNames","map","champ","m_set4ChampsSeen","m_set4ChampsBought","forEach","App","props","showModal","e","console","log","setState","show","state","time","boughtChamps","comp","isPlaying","updateMoney","bind","updateLevel","updateExp","addBoughtChamp","removeBoughtChamp","numBoughtChamps","handleClickPlay","resetState","newMoney","this","newLevel","newExp","length","star","ch","filter","c","push","index","findIndex","newChamps","splice","clearInterval","timerID","refreshTiles","Math","min","floor","forceUpdate","setInterval","tick","numComps","Object","keys","random","myComp","className","onClose","targetComp","onClick","info","value","React","Component","Modal","children","repeat","TargetCompDisplay","toString","PureComponent","ChampBoughtArea","btn","i","key","addChamp","removeChamp","ChampButton","sellChamp","InfoText","ChampHand","tiles","randomizeChamps","probSpread","row","probSpreadValues","values","randomChamps","randomNum","champCost","set4CorrectCostChamps","sum","reduce","total","weightedChoice","ceil","onReroll","tile","process","alt","RerollButton","handleKeyPress","event","reroll","document","addEventListener","removeEventListener","ExpButton","buyExp","ChampTile","hasChamp","buyChamp","champIndex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dab1bda8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const set4Images = [\r\n  { id: 0, src: '/assets/set4/empty.png', title: 'empty', cost: 100000, amount: 100000},\r\n  { id: 1, src: '/assets/set4/aatrox.png', title: 'aatrox', cost: 4, amount: 16},\r\n  { id: 2, src: '/assets/set4/ahri.png', title: 'ahri', cost: 4, amount: 16},\r\n  { id: 3, src: '/assets/set4/akali.png', title: 'akali', cost: 3, amount: 21 },\r\n  { id: 4, src: '/assets/set4/annie.png', title: 'annie', cost: 2, amount: 22 },\r\n  { id: 5, src: '/assets/set4/aphelios.png', title: 'aphelios', cost: 2, amount: 22 },\r\n  { id: 6, src: '/assets/set4/ashe.png', title: 'ashe', cost: 4, amount: 16 },\r\n  { id: 7, src: '/assets/set4/azir.png', title: 'azir', cost: 5, amount: 10 },\r\n  { id: 8, src: '/assets/set4/cassiopeia.png', title: 'cassiopeia', cost: 4, amount: 16  },\r\n  { id: 9, src: '/assets/set4/diana.png', title: 'diana', cost: 1, amount: 29 },\r\n  { id: 10, src: '/assets/set4/elise.png', title: 'elise', cost: 1, amount: 29 },\r\n  { id: 11, src: '/assets/set4/evelynn.png', title: 'evelynn', cost: 3, amount: 21  },\r\n  { id: 12, src: '/assets/set4/ezreal.png', title: 'ezreal', cost: 5, amount: 10 },\r\n  { id: 13, src: '/assets/set4/fiora.png', title: 'fiora', cost: 1, amount: 29 },\r\n  { id: 14, src: '/assets/set4/garen.png', title: 'garen', cost: 1, amount: 29 },\r\n  { id: 15, src: '/assets/set4/hecarim.png', title: 'hecarim', cost: 2, amount: 22 },\r\n  { id: 16, src: '/assets/set4/irelia.png', title: 'irelia', cost: 3, amount: 21 },\r\n  { id: 17, src: '/assets/set4/janna.png', title: 'janna', cost: 2, amount: 22 },\r\n  { id: 18, src: '/assets/set4/jarvan_4.png', title: 'jarvan_4', cost: 2, amount: 22 },\r\n  { id: 19, src: '/assets/set4/jax.png', title: 'jax', cost: 2, amount: 22 },\r\n  { id: 20, src: '/assets/set4/jhin.png', title: 'jhin', cost: 4, amount: 16 },\r\n  { id: 21, src: '/assets/set4/jinx.png', title: 'jinx', cost: 3, amount: 21 },\r\n  { id: 22, src: '/assets/set4/kalista.png', title: 'kalista', cost: 3, amount: 21 },\r\n  { id: 23, src: '/assets/set4/katarina.png', title: 'katarina', cost: 3, amount: 21 },\r\n  { id: 24, src: '/assets/set4/kayn.png', title: 'kayn', cost: 5, amount: 10 },\r\n  { id: 25, src: '/assets/set4/kennen.png', title: 'kennen', cost: 3, amount: 21 },\r\n  { id: 26, src: '/assets/set4/kindred.png', title: 'kindred', cost: 3, amount: 21 },\r\n  { id: 27, src: '/assets/set4/lee_sin.png', title: 'lee_sin', cost: 5, amount: 10 },\r\n  { id: 28, src: '/assets/set4/lillia.png', title: 'lillia', cost: 5, amount: 10 },\r\n  { id: 29, src: '/assets/set4/lissandra.png', title: 'lissandra', cost: 1, amount: 29 },\r\n  { id: 30, src: '/assets/set4/lulu.png', title: 'lulu', cost: 2, amount: 22 },\r\n  { id: 31, src: '/assets/set4/lux.png', title: 'lux', cost: 3, amount: 21  },\r\n  { id: 32, src: '/assets/set4/maokai.png', title: 'maokai', cost: 1, amount: 29 },\r\n  { id: 33, src: '/assets/set4/morgana.png', title: 'morgana', cost: 4, amount: 16 },\r\n  { id: 34, src: '/assets/set4/nami.png', title: 'nami', cost: 1, amount: 29 },\r\n  { id: 35, src: '/assets/set4/nidalee.png', title: 'nidalee', cost: 1, amount: 29 },\r\n  { id: 36, src: '/assets/set4/nunu.png', title: 'nunu', cost: 3, amount: 21 },\r\n  { id: 37, src: '/assets/set4/pyke.png', title: 'pyke', cost: 2, amount: 22 },\r\n  { id: 38, src: '/assets/set4/riven.png', title: 'riven', cost: 4, amount: 16 },\r\n  { id: 39, src: '/assets/set4/sejuani.png', title: 'sejuani', cost: 4, amount: 16 },\r\n  { id: 41, src: '/assets/set4/sett.png', title: 'sett', cost: 5, amount: 10 },\r\n  { id: 42, src: '/assets/set4/shen.png', title: 'shen', cost: 4, amount: 16 },\r\n  { id: 43, src: '/assets/set4/sylas.png', title: 'sylas', cost: 2, amount: 22 },\r\n  { id: 44, src: '/assets/set4/tahm_kench.png', title: 'tahm_kench', cost: 1, amount: 29 },\r\n  { id: 45, src: '/assets/set4/talon.png', title: 'talon', cost: 4, amount: 16 },\r\n  { id: 46, src: '/assets/set4/teemo.png', title: 'teemo', cost: 2, amount: 22 },\r\n  { id: 47, src: '/assets/set4/thresh.png', title: 'thresh', cost: 2, amount: 22 },\r\n  { id: 48, src: '/assets/set4/twisted_fate.png', title: 'twisted_fate', cost: 1, amount: 29 },\r\n  { id: 49, src: '/assets/set4/vayne.png', title: 'vayne', cost: 1, amount: 29 },\r\n  { id: 50, src: '/assets/set4/veigar.png', title: 'veigar', cost: 3, amount: 21 },\r\n  { id: 51, src: '/assets/set4/vi.png', title: 'vi', cost: 2, amount: 22 },\r\n  { id: 52, src: '/assets/set4/warwick.png', title: 'warwick', cost: 4, amount: 16 },\r\n  { id: 53, src: '/assets/set4/wukong.png', title: 'wukong', cost: 1, amount: 29 },\r\n  { id: 54, src: '/assets/set4/xin_zhao.png', title: 'xin_zhao', cost: 3, amount: 21 },\r\n  { id: 55, src: '/assets/set4/yasuo.png', title: 'yasuo', cost: 1, amount: 29 },\r\n  { id: 56, src: '/assets/set4/yone.png', title: 'yone', cost: 5, amount: 10 },\r\n  { id: 57, src: '/assets/set4/yuumi.png', title: 'yuumi', cost: 3, amount: 21 },\r\n  { id: 58, src: '/assets/set4/zed.png', title: 'zed', cost: 2, amount: 22 },\r\n  { id: 59, src: '/assets/set4/zilean.png', title: 'zilean', cost: 5, amount: 10 },\r\n]\r\n\r\nexport default set4Images;\r\n","const set4ProbTable = [\r\n  {level: 1, t1:100, t2:0, t3:0, t4:0, t5:0},\r\n  {level: 2, t1:100, t2:0, t3:0, t4:0, t5:0},\r\n  {level: 3, t1:75, t2:25, t3:0, t4:0, t5:0},\r\n  {level: 4, t1:55, t2:30, t3:15, t4:0, t5:0},\r\n  {level: 5, t1:45, t2:30, t3:20, t4:5, t5:0},\r\n  {level: 6, t1:30, t2:35, t3:25, t4:10, t5:0},\r\n  {level: 7, t1:19, t2:35, t3:30, t4:15, t5:1},\r\n  {level: 8, t1:14, t2:20, t3:35, t4:25, t5:6},\r\n  {level: 9, t1:10, t2:15, t3:30, t4:30, t5:15},\r\n]\r\n\r\nexport default set4ProbTable;\r\n","const set4ExpTable = [\r\n  {level: 1, exp: 0},\r\n  {level: 2, exp: 2},\r\n  {level: 3, exp: 6},\r\n  {level: 4, exp: 10},\r\n  {level: 5, exp: 20},\r\n  {level: 6, exp: 36},\r\n  {level: 7, exp: 56},\r\n  {level: 8, exp: 80},\r\n  {level: 9, exp: \"Max\"}\r\n]\r\n\r\nexport default set4ExpTable;\r\n","const set4Comps = [\r\n  {compName: \"9 cultists\", compChamps:[\"jhin\", \"pyke\", \"zilean\", \"aatrox\", \"evelynn\", \"kalista\", \"elise\", \"twisted_fate\"]},\r\n  {compName: \"warlord katarina\", compChamps:[\"yone\", \"katarina\", \"azir\", \"sejuani\", \"jinx\", \"jarvan_4\", \"pyke\", \"nidalee\"]},\r\n  {compName: \"raikou\", compChamps:[\"warwick\", \"lee_sin\", \"yone\", \"morgana\", \"shen\", \"irelia\", \"lux\", \"jax\"]},\r\n  {compName: \"6 keepers\", compChamps:[\"jhin\", \"jarvan_4\", \"azir\", \"aatrox\", \"riven\", \"kennen\", \"elise\", \"vayne\"]},\r\n  {compName: \"6 dusk\", compChamps:[\"jhin\", \"riven\", \"azir\", \"zilean\", \"aatrox\", \"cassiopeia\", \"thresh\", \"vayne\"]},\r\n  {compName: \"moonlight adept\", compChamps:[\"yone\", \"aphelios\", \"lissandra\", \"shen\", \"irelia\", \"kindred\", \"lux\", \"yuumi\"]},\r\n  {compName: \"vanguard mystic ahri\", compChamps:[\"ahri\", \"yuumi\", \"sejuani\", \"kayn\", \"yone\", \"aatrox\", \"cassiopeia\", \"thresh\"]},\r\n  {compName: \"hunters and friends\", compChamps:[\"yone\", \"ashe\", \"morgana\", \"shen\", \"warwick\", \"irelia\", \"kindred\", \"lux\"]},\r\n  {compName: \"zed and friends\", compChamps:[\"zed\", \"akali\", \"azir\", \"kayn\", \"yone\", \"shen\", \"kennen\", \"pyke\"]},\r\n  {compName: \"6 elderwood mage\", compChamps:[\"veigar\", \"nunu\", \"lillia\", \"ashe\", \"sejuani\", \"hecarim\", \"lulu\", \"maokai\"]},\r\n  {compName: \"4 enlightened\", compChamps:[\"talon\", \"morgana\", \"yone\", \"shen\", \"irelia\", \"lux\", \"janna\", \"pyke\"]},\r\n  {compName: \"vayne mechanics\", compChamps:[\"jinx\", \"vayne\", \"azir\", \"cassiopeia\", \"jhin\", \"sejuani\", \"teemo\", \"thresh\"]},\r\n  {compName: \"bonkey spirit bomb\", compChamps:[\"ahri\", \"wukong\", \"zilean\", \"aatrox\", \"cassiopeia\", \"sejuani\", \"yuumi\", \"thresh\"]},\r\n  {compName: \"moonlight lissandra\", compChamps:[\"lissandra\", \"diana\", \"yone\", \"shen\", \"irelia\", \"lux\", \"janna\", \"pyke\"]},\r\n\r\n]\r\n\r\nexport default set4Comps;\r\n","// import React from 'react';\n// import logo from './logo.svg';\n// import set4Images from './set4Images';\n// import set4ProbTable from './set4ProbabilityTable';\n// import set4ExpTable from './set4ExpTable';\n// import set4Comps from './set4Comps';\n// import './App.css';\n//\n// let m_set4Images = set4Images;\n// const emptyImg = set4Images[0].src;\n// let m_set4Comps = set4Comps;\n// let money = 50;\n// let level = 1;\n// let exp = 0;\n// let benchSize = 9;\n// let timeLimit = 100; //default time limit\n// let m_set4ChampNames = m_set4Images.map(champ => {\n//   return champ.title;\n// });\n// let m_set4ChampsSeen = {};\n// let m_set4ChampsBought = {};\n// m_set4ChampNames.forEach(champ => {\n//   m_set4ChampsSeen[champ] = 0;\n//   m_set4ChampsBought[champ] = 0;\n// });\n//\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       money: 50,\n//       level: 1,\n//       exp: 0,\n//       time: 0,\n//       boughtChamps: [],\n//       comp: [\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"],\n//       compName: \"\",\n//       isPlaying: false,\n//       show: false\n//     }\n//     this.updateMoney = this.updateMoney.bind(this);\n//     this.updateLevel = this.updateLevel.bind(this);\n//     this.updateExp = this.updateExp.bind(this);\n//     this.addBoughtChamp = this.addBoughtChamp.bind(this);\n//     this.removeBoughtChamp = this.removeBoughtChamp.bind(this);\n//     this.numBoughtChamps = this.numBoughtChamps.bind(this);\n//     this.handleClickPlay = this.handleClickPlay.bind(this);\n//     this.resetState = this.resetState.bind(this);\n//     this.showModal = this.showModal.bind(this);\n//   }\n//\n//   updateMoney(newMoney){\n//     this.setState({money: newMoney});\n//   }\n//\n//   updateLevel(newLevel){\n//     this.setState({level: newLevel});\n//     if(level === 9){\n//       this.state.exp = 'Max'\n//     }\n//   }\n//\n//   updateExp(newExp){\n//     this.setState({exp: newExp});\n//   }\n//\n//   numBoughtChamps(){\n//     return this.state.boughtChamps.length;\n//   }\n//\n//   addBoughtChamp(champ){\n//     //add to champs bought for this round\n//     m_set4ChampsBought[champ.title]++;\n//     // console.log(m_set4ChampsBought);\n//     //reward money if 2 star or 3 stars\n//     if(champ.star === 2){\n//       money += 3;\n//       this.updateMoney(money);\n//     }\n//     if(champ.star === 3){\n//       money += 10;\n//       this.updateMoney(money);\n//     }\n//\n//     let ch = this.state.boughtChamps;\n//\n//     //check to see if there are 2 other champs that match the name of champ and have the same stars\n//     if(ch.filter(c => c.title === champ.title && c.star === champ.star).length === 2){\n//       //remove the 2 duplicates\n//       this.removeBoughtChamp(champ);\n//       this.removeBoughtChamp(champ);\n//       this.addBoughtChamp({title: champ.title, cost: champ.cost, star: champ.star + 1});\n//     }else{\n//       if(level + benchSize <= this.numBoughtChamps()){\n//         return false;\n//       }\n//       console.log(champ);\n//       ch.push(champ);\n//       this.setState({boughtChamps: ch});\n//       console.log(\"added champ\");\n//       console.log(this.state.boughtChamps);\n//     }\n//     return true;\n//   }\n//\n//   removeBoughtChamp(champ){\n//     let index = this.state.boughtChamps.findIndex(ch => ch.title === champ.title && ch.star === champ.star);\n//     let newChamps = this.state.boughtChamps;\n//     newChamps.splice(index, 1);\n//     this.setState({boughtChamps: newChamps});\n//     console.log(\"removed champ\");\n//     console.log(this.state.boughtChamps);\n//\n//   }\n//\n//   componentDidMount(){\n//\n//   }\n//\n//   componentWillUnmount() {\n//     clearInterval(this.timerID);\n//   }\n//\n//   tick() {\n//     if(!this.state.isPlaying)\n//       return;\n//     this.setState({refreshTiles: false});\n//     this.setState({\n//       time: this.state.time + 1\n//     });\n//     if(this.state.time % 5 == 0){\n//       money+= 5 + Math.min(5, Math.floor(money / 10));\n//       this.updateMoney(money);\n//\n//       if(level === 9)\n//         return;\n//       if(exp >= set4ExpTable[level - 1].exp){\n//         exp -= set4ExpTable[level - 1].exp;\n//         level++;\n//         this.updateLevel(level);\n//       }\n//       exp+=2;\n//       this.updateExp(exp);\n//     }\n//     if(this.state.time >= timeLimit){\n//       this.setState({isPlaying: false});\n//       //open result modal\n//       this.showModal();\n//     }\n//   }\n//\n//   showModal = e => {\n//     console.log(\"show modal called\");\n//     this.setState({\n//       show: !this.state.show\n//     });\n//   };\n//\n//   resetState() {\n//     //reset game\n//     m_set4Images = set4Images;\n//     m_set4Comps = set4Comps;\n//     money = 50;\n//     level = 1;\n//     exp = 0;\n//     benchSize = 9;\n//     timeLimit = 100; //default time limit\n//     m_set4ChampNames.forEach(champ => {\n//       m_set4ChampsSeen[champ] = 0;\n//       m_set4ChampsBought[champ] = 0;\n//     });\n//\n//     this.setState({\n//       money: 50,\n//       level: 1,\n//       exp: 0,\n//       time: 0,\n//       boughtChamps: [],\n//       isPlaying: true\n//     });\n//     this.forceUpdate();\n//   }\n//\n//   handleClickPlay() {\n//     this.resetState();\n//     //if timer exists, delete it\n//     if(this.timerID != null){\n//       clearInterval(this.timerID);\n//     }\n//     this.timerID = setInterval(\n//       () => this.tick(),\n//       1000\n//     );\n//\n//     let numComps = Object.keys(m_set4Comps).length;\n//     console.log(m_set4Comps[Math.floor(Math.random() * numComps)].compChamps);\n//     let myComp = m_set4Comps[Math.floor(Math.random() * numComps)];\n//     this.setState({comp: myComp.compChamps});\n//     this.setState({compName: myComp.compName});\n//     //reroll once, don't know how to do this atm\n//\n//   }\n//\n//\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <p>Welcome to tft roller! Practice rolling for those shiny 3 stars and never facepalm for missing another champ!</p>\n//           <p>How to play: </p>\n//           <p>Every 5 seconds you will recieve 5 gold plus 1 gold interest for every 10 gold you have saved</p>\n//           <p>You can level up by pressing the buy exp button or by pressing f</p>\n//           <p>You can re-roll by pressing the re-roll button or by pressing d</p>\n//           <p>You will gain 3 gold for making a 2 star, and 10 gold for making a 3 star</p>\n//           <p>You have 100 seconds to roll the highest value comp given your target comp</p>\n//           <p>The comp will be randomly generated when you hit the Play button</p>\n//         </header>\n//         <Modal onClose={this.showModal} show={this.state.show} boughtChamps={this.state.boughtChamps} targetComp={this.state.comp}>\n//           Roller Report\n//         </Modal>\n//         <div className=\"game\">\n//           <a className=\"button1\" onClick={this.handleClickPlay}>{this.state.isPlaying ? \"RESET\" : \"PLAY\"}</a>\n//           <div className=\"row\">\n//             <TargetCompDisplay comp={this.state.comp} compName={this.state.compName}/>\n//           </div>\n//           <div className=\"row\">\n//             <ChampBoughtArea updateMoney={this.updateMoney} updateLevel={this.updateLevel} updateExp={this.updateExp} boughtChamps={this.state.boughtChamps} addBoughtChamp={this.addBoughtChamp} removeBoughtChamp={this.removeBoughtChamp}/>\n//           </div>\n//           <div className=\"row\">\n//             <InfoText info=\"Level\" value={this.state.level}/>\n//             <InfoText info=\"Gold\" value={this.state.money}/>\n//             <InfoText info=\"Exp\" value={this.state.exp + '/' + set4ExpTable[level - 1].exp}/>\n//             <InfoText info=\"Time\" value={this.state.time}/>\n//           </div>\n//           <ChampHand numBoughtChamps={this.numBoughtChamps} updateMoney={this.updateMoney} updateLevel={this.updateLevel} updateExp={this.updateExp} addBoughtChamp={this.addBoughtChamp} removeBoughtChamp={this.removeBoughtChamp}/>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n//\n// class Modal extends React.Component {\n//\n//   onClose = e => {\n//     this.props.onClose && this.props.onClose(e);\n//   };\n//\n//   render() {\n//       if(!this.props.show){\n//           return null;\n//       }\n//       return (\n//         <div className=\"modal\" id=\"modal\">\n//\n//           <div className=\"content\">\n//             <h2>{this.props.children}</h2>\n//             <h3>Target Comp</h3>\n//             {this.props.targetComp.map(champ => {\n//               return champ + \" \"\n//             })}\n//             <h3>Your Comp</h3>\n//             {this.props.boughtChamps.map(champ => {\n//               return champ.title + \"*\".repeat(champ.star) + \" \"\n//             })}\n//             <h3>You missed</h3>\n//             {this.props.targetComp.map(champ => {\n//               return m_set4ChampsSeen[champ] - m_set4ChampsBought[champ] > 0 ? champ + \": \" + (m_set4ChampsSeen[champ] - m_set4ChampsBought[champ])  + \"  \": \"\";\n//             })}\n//             <div className=\"actions\">\n//               <button\n//                 onClick={e => {\n//                   this.onClose(e);\n//                 }}\n//               >\n//                 Close\n//               </button>\n//             </div>\n//           </div>\n//\n//         </div>\n//       );\n//   }\n// }\n//\n// class TargetCompDisplay extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <p>Target Comp: {this.props.compName}</p>\n//         {console.log(this.props.comp)}\n//         <p>{this.props.comp ? this.props.comp.toString() : \"\"}</p>\n//       </div>\n//     )\n//   }\n// }\n//\n// class ChampBoughtArea extends React.Component {\n//   constructor(props){\n//     super(props);\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//       {\n//         this.props.boughtChamps.map((btn, i) => (\n//           <ChampButton key={i} champ={btn.title} cost={btn.cost} star={btn.star} addChamp={this.props.addBoughtChamp} removeChamp={this.props.removeBoughtChamp} updateMoney={this.props.updateMoney}/>\n//         ))\n//       }\n//       </div>\n//     )\n//   }\n// }\n// class ChampButton extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.sellChamp = this.sellChamp.bind(this);\n//   }\n//\n//   sellChamp() {\n//     //sell the champ and return it to the pool\n//     let ch = {title: this.props.champ, cost: this.props.cost, star: this.props.star};\n//     this.props.removeChamp(ch);\n//     money += this.props.cost;\n//     this.props.updateMoney(money);\n//   }\n//\n//   render() {\n//     return (\n//       <button className={\"champButton\" + this.props.star} onClick={this.sellChamp}>{this.props.champ}{'*'.repeat(this.props.star)}</button>\n//     )\n//   }\n// }\n//\n// class InfoText extends React.Component {\n//   constructor(props){\n//     super(props);\n//   }\n//\n//   render() {\n//     return (\n//       <h1>{this.props.info}: {this.props.value}</h1>\n//     )\n//   }\n// }\n//\n// class ChampHand extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       tiles:[\n//         { id: 1, src: '/assets/set4/ahri.png', title: 'ahri', cost: 2, },\n//         { id: 2, src: '/assets/set4/annie.png', title: 'annie', cost: 2 },\n//         { id: 3, src: '/assets/set4/ashe.png', title: 'ashe', cost: 3 },\n//         { id: 4, src: '/assets/set4/aurelion-sol.png', title: 'aurelion-sol', cost: 5 },\n//         { id: 5, src: '/assets/set4/blitzcrank.png', title: 'blitzcrank', cost: 2 },\n//       ],\n//       refreshTiles: false\n//     };\n//     this.randomizeChamps = this.randomizeChamps.bind(this);\n//   }\n//\n//\n//    randomizeChamps(){\n//      //get the correct probabilty spread;\n//      let probSpread = set4ProbTable.filter((row)=>{\n//        return row.level === level;\n//      })[0];\n//\n//      let probSpreadValues = Object.values(probSpread);\n//\n//     //chooses 5 champs based on table probabilities and level\n//     let randomChamps = [];\n//     for(let i = 0; i < 5; i++){\n//       //roll from 1-100\n//       let randomNum = Math.floor(Math.random() * 100) + 1;\n//       let champCost = 0;\n//       //convert probspread to array to roll the random number through the prob probSpread\n//       for(let i = 1; i <= 5; i++){\n//         if(randomNum - probSpreadValues[i] <= 0){\n//           champCost = i;\n//           break;\n//         }else{\n//           randomNum -= probSpreadValues[i];\n//         }\n//       }\n//       //filter all the correct cost champs\n//       let set4CorrectCostChamps = m_set4Images.filter(champ =>\n//         champ.cost === champCost\n//       );\n//       // console.log(set4CorrectCostChamps);\n//       //make a selection using weighted random\n//       let sum = set4CorrectCostChamps.reduce((total, champ) => total + champ.amount, 0);\n//       // console.log(sum);\n//       let weightedChoice = Math.ceil(Math.random() * sum);\n//       // console.log(weightedChoice);\n//       for(let i = 0; i < set4CorrectCostChamps.length; i++){\n//         weightedChoice -= set4CorrectCostChamps[i].amount;\n//         if(weightedChoice <= 0)\n//         {\n//           weightedChoice = i;\n//           break;\n//         }\n//       }\n//       // console.log(\"Random choice\");\n//       // console.log(weightedChoice);\n//       // console.log(set4CorrectCostChamps[weightedChoice]);\n//       randomChamps.push(set4CorrectCostChamps[weightedChoice]);\n//     }\n//     console.log(randomChamps);\n//     this.setState({tiles: randomChamps});\n//     this.setState({refreshTiles: true})\n//     // this.setState({tiles: [{ id: 1, src: '/assets/set4/ahri.png', title: 'ahri', cost: 2, }]});\n//     // console.log(this.state.tiles);\n//     randomChamps.forEach(champ => {\n//       m_set4ChampsSeen[champ.title]++;\n//     });\n//     console.log(m_set4ChampsSeen);\n//   }\n//\n//   componentDidMount(){\n//     //roll the first random randomChamps\n//     // alert(\"Hey\");\n//     // this.randomizeChamps();\n//     this.randomizeChamps();\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"stack\">\n//             <ExpButton\n//             updateMoney={this.props.updateMoney} updateLevel={this.props.updateLevel} updateExp={this.props.updateExp}/>\n//             <RerollButton onReroll={this.randomizeChamps}\n//             updateMoney={this.props.updateMoney} updateLevel={this.props.updateLevel} updateExp={this.props.updateExp}/>\n//           </div>\n//         {this.state.tiles.map((tile, i) => (\n//           <ChampTile key={i} src={process.env.PUBLIC_URL + tile.src} alt={tile.title} cost={tile.cost}\n//           updateMoney={this.props.updateMoney} updateLevel={this.props.updateLevel} updateExp={this.props.updateExp} numBoughtChamps={this.props.numBoughtChamps} addBoughtChamp={this.props.addBoughtChamp} removeBoughtChamp={this.props.removeBoughtChamp}/>\n//         ))}\n//\n//       </div>\n//     )\n//   }\n// }\n//\n//\n//\n// class RerollButton extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {};\n//     this.reroll = this.reroll.bind(this);\n//   }\n//\n//   reroll() {\n//     if(money >= 2){\n//       console.log(\"rerolling\");\n//       money -= 2;\n//       this.props.updateMoney(money);\n//       this.props.onReroll();\n//     }\n//   }\n//\n//   handleKeyPress = (event) => {\n//     if(event.key === 'd'){\n//       this.reroll();\n//     }\n//   }\n//\n//   componentDidMount() {\n//     document.addEventListener(\"keydown\", this.handleKeyPress);\n//   }\n//\n//   componentWillUnmount() {\n//     document.removeEventListener(\"keydown\", this.handleKeyPress);\n//   }\n//\n//\n//   render() {\n//     return (\n//       <button className=\"rerollButton\"  onClick={this.reroll}>Reroll</button>\n//     )\n//   }\n// }\n//\n// class ExpButton extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {};\n//     this.buyExp = this.buyExp.bind(this);\n//   }\n//\n//   buyExp() {\n//     if(money >= 4){\n//       if(level === 9)\n//         return;\n//       console.log(\"buying exp\");\n//       money -= 4;\n//       this.props.updateMoney(money);\n//       exp += 4;\n//\n//       if(exp >= set4ExpTable[level - 1].exp){\n//         //level up\n//         exp -= set4ExpTable[level - 1].exp;\n//         level++;\n//         this.props.updateLevel(level);\n//       }\n//       this.props.updateExp(exp);\n//     }\n//   }\n//\n//   handleKeyPress = (event) => {\n//     if(event.key === 'f'){\n//       this.buyExp();\n//     }\n//   }\n//\n//   componentDidMount(){\n//     document.addEventListener(\"keydown\", this.handleKeyPress);\n//   }\n//\n//   componentWillUnmount(){\n//     document.removeEventListener(\"keydown\", this.handleKeyPress);\n//   }\n//\n//   render() {\n//     return (\n//       <button className=\"expButton\" onClick={this.buyExp}>Buy Exp</button>\n//     )\n//   }\n// }\n//\n// class ChampTile extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       hasChamp: true\n//     };\n//     this.buyChamp = this.buyChamp.bind(this);\n//   }\n//\n//   buyChamp() {\n//     if(this.state.hasChamp && money >= this.props.cost){\n//       //add champ to bought champs and check to see if this goes through\n//       if(this.props.addBoughtChamp({title: this.props.alt, cost: this.props.cost, star: 1})){\n//         //passed so it is okay\n//         this.setState({hasChamp: false});\n//         money -= this.props.cost;\n//         this.props.updateMoney(money);\n//         //remove one champ from the pool\n//         let champIndex = m_set4Images.findIndex(champ => champ.title == this.props.alt);\n//         m_set4Images[champIndex].amount--;\n//       }\n//     }\n//   }\n//\n//\n//\n//   componentWillReceiveProps({props}){\n//       this.setState({hasChamp: true});\n//   }\n//\n//   render() {\n//     return (\n//       <img src={this.state.hasChamp ? this.props.src : process.env.PUBLIC_URL + emptyImg} alt={this.props.alt} onClick={this.buyChamp}/>\n//     )\n//   }\n// }\n//\n// export default App;\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport set4Images from './set4/set4Images';\nimport set4ProbTable from './set4/set4ProbabilityTable';\nimport set4ExpTable from './set4/set4ExpTable';\nimport set4Comps from './set4/set4Comps';\nimport './App.css';\n\nlet m_set4Images = set4Images;\nconst emptyImg = set4Images[0].src;\nlet m_set4Comps = set4Comps;\nlet money = 50;\nlet level = 1;\nlet exp = 0;\nlet benchSize = 9;\nlet timeLimit = 100; //default time limit\nlet m_set4ChampNames = m_set4Images.map(champ => {\n  return champ.title;\n});\nlet m_set4ChampsSeen = {};\nlet m_set4ChampsBought = {};\nm_set4ChampNames.forEach(champ => {\n  m_set4ChampsSeen[champ] = 0;\n  m_set4ChampsBought[champ] = 0;\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      money: 50,\n      level: 1,\n      exp: 0,\n      time: 0,\n      boughtChamps: [],\n      comp: [\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"],\n      compName: \"\",\n      isPlaying: false,\n      show: false\n    }\n    this.updateMoney = this.updateMoney.bind(this);\n    this.updateLevel = this.updateLevel.bind(this);\n    this.updateExp = this.updateExp.bind(this);\n    this.addBoughtChamp = this.addBoughtChamp.bind(this);\n    this.removeBoughtChamp = this.removeBoughtChamp.bind(this);\n    this.numBoughtChamps = this.numBoughtChamps.bind(this);\n    this.handleClickPlay = this.handleClickPlay.bind(this);\n    this.resetState = this.resetState.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  updateMoney(newMoney){\n    this.setState({money: newMoney});\n  }\n\n  updateLevel(newLevel){\n    this.setState({level: newLevel});\n    if(level === 9){\n      this.state.exp = 'Max'\n    }\n  }\n\n  updateExp(newExp){\n    this.setState({exp: newExp});\n  }\n\n  numBoughtChamps(){\n    return this.state.boughtChamps.length;\n  }\n\n  addBoughtChamp(champ){\n    //add to champs bought for this round\n    m_set4ChampsBought[champ.title]++;\n    // console.log(m_set4ChampsBought);\n    //reward money if 2 star or 3 stars\n    if(champ.star === 2){\n      money += 3;\n      this.updateMoney(money);\n    }\n    if(champ.star === 3){\n      money += 10;\n      this.updateMoney(money);\n    }\n\n    let ch = this.state.boughtChamps;\n\n    //check to see if there are 2 other champs that match the name of champ and have the same stars\n    if(ch.filter(c => c.title === champ.title && c.star === champ.star).length === 2){\n      //remove the 2 duplicates\n      this.removeBoughtChamp(champ);\n      this.removeBoughtChamp(champ);\n      this.addBoughtChamp({title: champ.title, cost: champ.cost, star: champ.star + 1});\n    }else{\n      if(level + benchSize <= this.numBoughtChamps()){\n        return false;\n      }\n      console.log(champ);\n      ch.push(champ);\n      this.setState({boughtChamps: ch});\n      console.log(\"added champ\");\n      console.log(this.state.boughtChamps);\n    }\n    return true;\n  }\n\n  removeBoughtChamp(champ){\n    let index = this.state.boughtChamps.findIndex(ch => ch.title === champ.title && ch.star === champ.star);\n    let newChamps = this.state.boughtChamps;\n    newChamps.splice(index, 1);\n    this.setState({boughtChamps: newChamps});\n    console.log(\"removed champ\");\n    console.log(this.state.boughtChamps);\n\n  }\n\n  componentDidMount(){\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    if(!this.state.isPlaying)\n      return;\n    this.setState({refreshTiles: false});\n    this.setState({\n      time: this.state.time + 1\n    });\n    if(this.state.time % 5 == 0){\n      money+= 5 + Math.min(5, Math.floor(money / 10));\n      this.updateMoney(money);\n\n      if(level === 9)\n        return;\n      if(exp >= set4ExpTable[level - 1].exp){\n        exp -= set4ExpTable[level - 1].exp;\n        level++;\n        this.updateLevel(level);\n      }\n      exp+=2;\n      this.updateExp(exp);\n    }\n    if(this.state.time >= timeLimit){\n      this.setState({isPlaying: false});\n      //open result modal\n      this.showModal();\n    }\n  }\n\n  showModal = e => {\n    console.log(\"show modal called\");\n    this.setState({\n      show: !this.state.show\n    });\n  };\n\n  resetState() {\n    //reset game\n    m_set4Images = set4Images;\n    m_set4Comps = set4Comps;\n    money = 50;\n    level = 1;\n    exp = 0;\n    benchSize = 9;\n    timeLimit = 100; //default time limit\n    m_set4ChampNames.forEach(champ => {\n      m_set4ChampsSeen[champ] = 0;\n      m_set4ChampsBought[champ] = 0;\n    });\n\n    this.setState({\n      money: 50,\n      level: 1,\n      exp: 0,\n      time: 0,\n      boughtChamps: [],\n      isPlaying: true\n    });\n    this.forceUpdate();\n  }\n\n  handleClickPlay() {\n    this.resetState();\n    //if timer exists, delete it\n    if(this.timerID != null){\n      clearInterval(this.timerID);\n    }\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n\n    let numComps = Object.keys(m_set4Comps).length;\n    console.log(m_set4Comps[Math.floor(Math.random() * numComps)].compChamps);\n    let myComp = m_set4Comps[Math.floor(Math.random() * numComps)];\n    this.setState({comp: myComp.compChamps});\n    this.setState({compName: myComp.compName});\n    //reroll once, don't know how to do this atm\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Welcome to tft roller! Practice rolling for those shiny 3 stars and never facepalm for missing another champ!</p>\n          <p>How to play: </p>\n          <p>Every 5 seconds you will recieve 5 gold plus 1 gold interest for every 10 gold you have saved</p>\n          <p>You can level up by pressing the buy exp button or by pressing f</p>\n          <p>You can re-roll by pressing the re-roll button or by pressing d</p>\n          <p>You will gain 3 gold for making a 2 star, and 10 gold for making a 3 star</p>\n          <p>You have 100 seconds to roll the highest value comp given your target comp</p>\n          <p>The comp will be randomly generated when you hit the Play button</p>\n        </header>\n        <Modal onClose={this.showModal} show={this.state.show} boughtChamps={this.state.boughtChamps} targetComp={this.state.comp}>\n          Roller Report\n        </Modal>\n        <div className=\"game\">\n          <a className=\"button1\" onClick={this.handleClickPlay}>{this.state.isPlaying ? \"RESET\" : \"PLAY\"}</a>\n          <div className=\"row\">\n            <TargetCompDisplay comp={this.state.comp} compName={this.state.compName}/>\n          </div>\n          <div className=\"row\">\n            <ChampBoughtArea updateMoney={this.updateMoney} updateLevel={this.updateLevel} updateExp={this.updateExp} boughtChamps={this.state.boughtChamps} addBoughtChamp={this.addBoughtChamp} removeBoughtChamp={this.removeBoughtChamp}/>\n          </div>\n          <div className=\"row\">\n            <InfoText info=\"Level\" value={this.state.level}/>\n            <InfoText info=\"Gold\" value={this.state.money}/>\n            <InfoText info=\"Exp\" value={this.state.exp + '/' + set4ExpTable[level - 1].exp}/>\n            <InfoText info=\"Time\" value={this.state.time}/>\n          </div>\n          <ChampHand numBoughtChamps={this.numBoughtChamps} updateMoney={this.updateMoney} updateLevel={this.updateLevel} updateExp={this.updateExp} addBoughtChamp={this.addBoughtChamp} removeBoughtChamp={this.removeBoughtChamp}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Modal extends React.Component {\n\n  onClose = e => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n      if(!this.props.show){\n          return null;\n      }\n      return (\n        <div className=\"modal\" id=\"modal\">\n\n          <div className=\"content\">\n            <h2>{this.props.children}</h2>\n            <h3>Target Comp</h3>\n            {this.props.targetComp.map(champ => {\n              return champ + \" \"\n            })}\n            <h3>Your Comp</h3>\n            {this.props.boughtChamps.map(champ => {\n              return champ.title + \"*\".repeat(champ.star) + \" \"\n            })}\n            <h3>You missed</h3>\n            {this.props.targetComp.map(champ => {\n              return m_set4ChampsSeen[champ] - m_set4ChampsBought[champ] > 0 ? champ + \": \" + (m_set4ChampsSeen[champ] - m_set4ChampsBought[champ])  + \"  \": \"\";\n            })}\n            <div className=\"actions\">\n              <button\n                onClick={e => {\n                  this.onClose(e);\n                }}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n\n        </div>\n      );\n  }\n}\n\nclass TargetCompDisplay extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Target Comp: {this.props.compName}</p>\n        {console.log(this.props.comp)}\n        <p>{this.props.comp ? this.props.comp.toString() : \"\"}</p>\n      </div>\n    )\n  }\n}\n\nclass ChampBoughtArea extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n      {\n        this.props.boughtChamps.map((btn, i) => (\n          <ChampButton key={i} champ={btn.title} cost={btn.cost} star={btn.star} addChamp={this.props.addBoughtChamp} removeChamp={this.props.removeBoughtChamp} updateMoney={this.props.updateMoney}/>\n        ))\n      }\n      </div>\n    )\n  }\n}\nclass ChampButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.sellChamp = this.sellChamp.bind(this);\n  }\n\n  sellChamp() {\n    //sell the champ and return it to the pool\n    let ch = {title: this.props.champ, cost: this.props.cost, star: this.props.star};\n    this.props.removeChamp(ch);\n    money += this.props.cost;\n    this.props.updateMoney(money);\n  }\n\n  render() {\n    return (\n      <button className={\"champButton\" + this.props.star} onClick={this.sellChamp}>{this.props.champ}{'*'.repeat(this.props.star)}</button>\n    )\n  }\n}\n\nclass InfoText extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n      <h1>{this.props.info}: {this.props.value}</h1>\n    )\n  }\n}\n\nclass ChampHand extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tiles:[\n        { id: 1, src: '/assets/set4/garen.png', title: 'garen', cost: 1 },\n        { id: 2, src: '/assets/set4/elise.png', title: 'elise', cost: 1 },\n        { id: 3, src: '/assets/set4/twisted_fate.png', title: 'twisted_fate', cost: 1 },\n        { id: 4, src: '/assets/set4/fiora.png', title: 'fiora', cost: 1 },\n        { id: 5, src: '/assets/set4/nidalee.png', title: 'nidalee', cost: 1 },\n      ],\n      refreshTiles: false\n    };\n    this.randomizeChamps = this.randomizeChamps.bind(this);\n  }\n\n\n   randomizeChamps(){\n     //get the correct probabilty spread;\n     let probSpread = set4ProbTable.filter((row)=>{\n       return row.level === level;\n     })[0];\n\n     let probSpreadValues = Object.values(probSpread);\n\n    //chooses 5 champs based on table probabilities and level\n    let randomChamps = [];\n    for(let i = 0; i < 5; i++){\n      //roll from 1-100\n      let randomNum = Math.floor(Math.random() * 100) + 1;\n      let champCost = 0;\n      //convert probspread to array to roll the random number through the prob probSpread\n      for(let i = 1; i <= 5; i++){\n        if(randomNum - probSpreadValues[i] <= 0){\n          champCost = i;\n          break;\n        }else{\n          randomNum -= probSpreadValues[i];\n        }\n      }\n      //filter all the correct cost champs\n      let set4CorrectCostChamps = m_set4Images.filter(champ =>\n        champ.cost === champCost\n      );\n      // console.log(set4CorrectCostChamps);\n      //make a selection using weighted random\n      let sum = set4CorrectCostChamps.reduce((total, champ) => total + champ.amount, 0);\n      // console.log(sum);\n      let weightedChoice = Math.ceil(Math.random() * sum);\n      // console.log(weightedChoice);\n      for(let i = 0; i < set4CorrectCostChamps.length; i++){\n        weightedChoice -= set4CorrectCostChamps[i].amount;\n        if(weightedChoice <= 0)\n        {\n          weightedChoice = i;\n          break;\n        }\n      }\n      // console.log(\"Random choice\");\n      // console.log(weightedChoice);\n      // console.log(set4CorrectCostChamps[weightedChoice]);\n      randomChamps.push(set4CorrectCostChamps[weightedChoice]);\n    }\n    console.log(randomChamps);\n    this.setState({tiles: randomChamps});\n    this.setState({refreshTiles: true})\n    // this.setState({tiles: [{ id: 1, src: '/assets/set4/ahri.png', title: 'ahri', cost: 2, }]});\n    // console.log(this.state.tiles);\n    randomChamps.forEach(champ => {\n      m_set4ChampsSeen[champ.title]++;\n    });\n    console.log(m_set4ChampsSeen);\n  }\n\n  componentDidMount(){\n    //roll the first random randomChamps\n    // alert(\"Hey\");\n    // this.randomizeChamps();\n    this.randomizeChamps();\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"stack\">\n            <ExpButton\n            updateMoney={this.props.updateMoney} updateLevel={this.props.updateLevel} updateExp={this.props.updateExp}/>\n            <RerollButton onReroll={this.randomizeChamps}\n            updateMoney={this.props.updateMoney} updateLevel={this.props.updateLevel} updateExp={this.props.updateExp}/>\n          </div>\n        {this.state.tiles.map((tile, i) => (\n          <ChampTile key={i} src={process.env.PUBLIC_URL + tile.src} alt={tile.title} cost={tile.cost}\n          updateMoney={this.props.updateMoney} updateLevel={this.props.updateLevel} updateExp={this.props.updateExp} numBoughtChamps={this.props.numBoughtChamps} addBoughtChamp={this.props.addBoughtChamp} removeBoughtChamp={this.props.removeBoughtChamp}/>\n        ))}\n\n      </div>\n    )\n  }\n}\n\n\n\nclass RerollButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n    this.reroll = this.reroll.bind(this);\n  }\n\n  reroll() {\n    if(money >= 2){\n      console.log(\"rerolling\");\n      money -= 2;\n      this.props.updateMoney(money);\n      this.props.onReroll();\n    }\n  }\n\n  handleKeyPress = (event) => {\n    if(event.key === 'd'){\n      this.reroll();\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n\n  render() {\n    return (\n      <button className=\"rerollButton\"  onClick={this.reroll}>Reroll</button>\n    )\n  }\n}\n\nclass ExpButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n    this.buyExp = this.buyExp.bind(this);\n  }\n\n  buyExp() {\n    if(money >= 4){\n      if(level === 9)\n        return;\n      console.log(\"buying exp\");\n      money -= 4;\n      this.props.updateMoney(money);\n      exp += 4;\n\n      if(exp >= set4ExpTable[level - 1].exp){\n        //level up\n        exp -= set4ExpTable[level - 1].exp;\n        level++;\n        this.props.updateLevel(level);\n      }\n      this.props.updateExp(exp);\n    }\n  }\n\n  handleKeyPress = (event) => {\n    if(event.key === 'f'){\n      this.buyExp();\n    }\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  render() {\n    return (\n      <button className=\"expButton\" onClick={this.buyExp}>Buy Exp</button>\n    )\n  }\n}\n\nclass ChampTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasChamp: true\n    };\n    this.buyChamp = this.buyChamp.bind(this);\n  }\n\n  buyChamp() {\n    if(this.state.hasChamp && money >= this.props.cost){\n      //add champ to bought champs and check to see if this goes through\n      if(this.props.addBoughtChamp({title: this.props.alt, cost: this.props.cost, star: 1})){\n        //passed so it is okay\n        this.setState({hasChamp: false});\n        money -= this.props.cost;\n        this.props.updateMoney(money);\n        //remove one champ from the pool\n        let champIndex = m_set4Images.findIndex(champ => champ.title == this.props.alt);\n        m_set4Images[champIndex].amount--;\n      }\n    }\n  }\n\n\n\n  componentWillReceiveProps({props}){\n      this.setState({hasChamp: true});\n  }\n\n  render() {\n    return (\n      <img src={this.state.hasChamp ? this.props.src : process.env.PUBLIC_URL + emptyImg} alt={this.props.alt} onClick={this.buyChamp}/>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}